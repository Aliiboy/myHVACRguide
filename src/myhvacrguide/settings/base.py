"""
Django settings for myhvacrguide project.

Generated by 'django-admin startproject' using Django 2.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from decouple import config
from django.contrib.messages import constants as messages


###############################################################################
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


###############################################################################
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# > SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# > SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)


###############################################################################
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # > Packages
    # SCSS
    'compressor',
    # Authentification
    'allauth',
    'allauth.account',
    # 'allauth.socialaccount',
    'captcha',
    # Rendu des formulaires
    'crispy_forms',
    # > App
    'core.apps.CoreConfig',
    'customer.apps.CustomerConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # > Whitenoise static chez Heroku
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myhvacrguide.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [],
        # > Centralisation des templates
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myhvacrguide.wsgi.application'

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}


###############################################################################
# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/
# http://www.i18nguy.com/unicode/language-identifiers.html

# LANGUAGE_CODE = 'en-US'
LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_L10N = True

USE_TZ = True


###############################################################################
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/


# > STATIC_URL : Utilisée pour se référer aux fichiers statiques
# se trouvant dans STATIC_ROOT.
STATIC_URL = '/static/'


# > MEDIA_URL : Utilisée pour se référer aux fichiers media
# se trouvant dans MEDIA_ROOT.
MEDIA_URL = '/media/'


# > STATIC_ROOT : Le chemin absolu vers le répertoire dans lequel
# collectstatic rassemble les fichiers statiques en vue du déploiement.
STATIC_ROOT = os.path.join(
    os.path.dirname(BASE_DIR),
    "static_collect",
    "static_root",
)


# > MEDIA_ROOT : Chemin absolu vers le répertoire qui contiendra les
# fichiers uploades par les utilisateurs.
MEDIA_ROOT = os.path.join(
    os.path.dirname(BASE_DIR),
    "static_collect",
    "media_root",
)


# > STATICFILE_DIRS : Emplacement de fichiers statiques communs ou
# supplementaires
STATICFILES_DIRS = [
    os.path.join(
        os.path.dirname(BASE_DIR), "static_common"),
    # "/home/special.polls.com/polls/static",
    # "/home/polls.com/polls/static",
    # "/opt/webfiles/common",
]


###############################################################################
# Whitenoise

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


###############################################################################
# SCSS

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
)

COMPRESS_PRECOMPILERS = (
    ('text/x-scss', 'django_libsass.SassCompiler'),
)


###############################################################################
# Crispy forms
CRISPY_TEMPLATE_PACK = 'bootstrap4'


###############################################################################
# Auth

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    # > Django-allauth
    'allauth.account.auth_backends.AuthenticationBackend',
)

AUTH_USER_MODEL = 'customer.CustomUser'
LOGIN_REDIRECT_URL = 'core:becenter'

###############################################################################
# Django-allauth
# https://django-allauth.readthedocs.io/en/latest/index.html

SITE_ID = 1
ACCOUNT_ADAPTER = 'customer.adapter.MyAccountAdapter'

# > Formulaire custom
ACCOUNT_FORMS = {
    'login': 'customer.forms.MyLoginForm',
    'signup': 'customer.forms.MySignupForm',
    'reset_password': 'customer.forms.MyResetPasswordForm',
    'reset_password_from_key': 'customer.forms.MyResetPasswordKeyForm',
    'change_password': 'customer.forms.MyChangePasswordForm',
    'add_email': 'customer.forms.MyAddEmailForm',
}

# > Auth via email
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_UNIQUE_EMAIL = True


def ACCOUNT_USER_DISPLAY(user):
    """
    Django-allauth.

    Retourne user_display dans les templates
    """
    return user.email


# > Inscription
ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
ACCOUNT_EMAIL_VERIFICATION = True
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_EMAIL_MAX_LENGTH = 100
# Variable additionnelle exclus de Django-allauth
ACCOUNT_SIGNUP_EMAIL_DOMAIN_ALLOWED = ('cefnord.fr')

# > Connexion
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True
# Nb de tentative max
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
# Tempo, en sec
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 600

# > Deconnexion
ACCOUNT_LOGOUT_REDIRECT_URL = 'core:index'

# > Changement/reset mot de passe
ACCOUNT_LOGIN_ON_PASSWORD_RESET = False
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = True
